name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    services:
      postgres:
        image: postgres:13
        ports:
          - 5433:5432  # Changed external port to avoid conflicts
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Check out the code
      uses: actions/checkout@v4

    - name: Pull PostgreSQL Image
      run: docker pull postgres:13  # Ensures the latest image is pulled

    - name: Check Running Docker Containers
      run: docker ps -a  # Debugging step to check for existing containers

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-django pytest-cov

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5433 -U postgres; do
          sleep 1
        done

    - name: Apply migrations
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5433/test_db
      run: |
        python manage.py migrate --noinput

    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5433/test_db
      run: |
        pytest --ds=your_project.settings --cov=. --cov-report=xml

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
